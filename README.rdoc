= Stars

Stars is a Rails engine plugin that provides simple rating logic for your Rails
apps with high customizability.

By default Stars provide a simple rating widget with 5 "stars" (duh). Think of
the rating system on YouTube. Logged in users can click on the widget to submit
their own rating (works through AJAX).

<b>NOTE:</b> Although this is good enough for my own use it's not yet a
finished "product" (as the incomplete status of this doc probably shows).
Please check the TODO list below to see if any of the missing items are things
you need before using this plugin.

== Requirements

* So far it's only been tested on Rails 2.3.X, but it would probably work just as
  fine on 2.2.x
* An user model (class name can be specified through configuration), and logged in
  user accessible through a controller method (e.g. <tt>current_user</tt>)
* Resourceful routes

== Features

* Built-in controller logic (via Rails engines), no need for generators
* Built-in rating model (can be used to rate any other ActiveRecord model
  through polymorphic associations)
* Helper methods to generate rating "widgets" in your views
* Reflection method for ActiveRecord models: <tt>is_rateable</tt> as a pretty
  alternative to <tt>include Stars::Rateable</tt>
* Shorthand method for routes: <tt>ratings</tt> as a pretty alternative to
  <tt>resource :ratings, :only => :create</tt>
* Generators for migrations and assets (JS, CSS and images)
* HTML5-based event handling, allowing for JavaScript framework independence
  (by default only a Prototype-based handler is provided,  but porting to
  jQuery, mootools or other similar frameworks shouldn't be too hard)
* Pretty configuration through an initializer

== Installing

To install as a plugin simply run:

  script/plugin install git://github.com/pilaf/stars.git

(Remember to restart your local server)

Next you'll need to generate the ratings migration and run it

  script/generate ratings_migration
  rake db:migrate

To make a model/resource rateable add the following line to your model class:

  class Article < ActiveRecord::Base
    is_rateable
  end

You'll also need to add a rating_average column to the model's table.
Fortunately there's a generator to do that for you:

  script/generate add_rating_average_migration article
  rake db:migrate

And then the corresponding resource in your <tt>config/routes.rb</tt> file:

  map.resources :articles do |article|
    article.ratings 
  end

<b>NOTE:</b> Installing the plugin will automatically generate asset files
(JS, CSS and images) under their respective directories in <tt>public</tt>
and an initializer file under <tt>config/initializers</tt>. These files
will be removed for you if you choose to uninstall the plugin using
<tt>script/plugin remove stars</tt>.

== Examples

== Configuration

To configure edit your <tt>config/initializers/stars_rating.rb</tt>.

== Internals (How Things Work)

== TODOs

* Add tests
* Add rake tasks to recalculate all averages
* Add I18n support
* Distribute as gem
* Test on multiple browsers

== Known issues

== Credits

Copyright (c) 2010 Pedro Fayolle (aka Pilaf), released under the MIT license
